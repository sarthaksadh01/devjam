{"version":3,"sources":["components/navbar.js","data/data.js","pages/content.js","components/history.js","components/videoPlayer.js","components/fileUpload.js","pages/topic.js","pages/login.js","pages/signup.js","App.js","serviceWorker.js","index.js"],"names":["NavbarUi","props","Navbar","collapseOnSelect","expand","className","class","href","style","height","src","Dropdown","Toggle","variant","id","imageUrl","color","Avatar","getRandomColor","name","email","size","round","Menu","Item","onClick","reactLocalStorage","clear","window","location","reload","baseUrl","signupWithEmailPassword","data","a","Promise","resolve","reject","axios","post","then","catch","err","createAccount","alert","JSON","stringify","get","content","_id","topicDetail","code","type","Content","state","searchRes","colors","search","bind","e","preventDefault","event","query","target","value","this","filter","topic","title","toLowerCase","includes","trim","setState","getContent","subTopics","count","i","length","onSubmit","submit","onChange","placeholder","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","map","index","Math","floor","random","thumbNail","alt","calculateVideos","subTopicId","fontSize","icon","faPlayCircle","faVideoSlash","React","Component","history","VideoPlayer","showNext","width","marginRight","playbackRate","controls","config","file","attributes","onContextMenu","controlsList","url","videoUrl","prev","marginTop","faArrowLeft","changePlayback","next","faArrowRight","FileUpload","widget","cloudinary","createUploadWidget","cloudName","uploadPreset","multiple","resourceType","error","result","changeSubmission","info","secure_url","marginLeft","isSubmitted","open","faFileArchive","fileUrl","disabled","uploadFile","ReactMarkdown","require","Topic","currentSubTopic","isFullTopic","isFullVideoTitle","privateComment","renderItem","subTopic","match","params","videoId","getSubmission","getObject","docs","finally","toggleLoading","submitFile","comment","doc","NotificationManager","val","parseFloat","key","border","points","getTopic","topicId","calculateCurrentSubtopic","disqusConfig","identifier","desc","instruction","faEllipsisH","videoLink","escapeHtml","source","shortname","overflow","maxHeight","itemRenderer","validator","Login","userName","password","handleUserNameChange","handlePasswordChange","handleFormSubmit","googleLogin","loginPage","validate","isSocialLogin","res","success","setObject","isLoggedin","profileObj","res2","responseData","parse","undefined","githubAuth","for","aria-describedby","clientId","buttonText","render","renderProps","onSuccess","onFailure","cookiePolicy","Signup","githubLogin","App","isLoading","loadingText","loadingCred","user","text","currentState","active","spinner","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.bbc34e5f.chunk.js","sourcesContent":["/* \nThis file is used as a Navbar component \nused across entire site.\n*/\n\nimport React from 'react';\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport { faEllipsisV, faEdit, faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Avatar from 'react-avatar';\nimport { Dropdown } from 'react-bootstrap'\nfunction NavbarUi(props) {\n    return (\n\n        <Navbar collapseOnSelect expand=\"lg\" className=\"shadow shadow-lg navbar navbar-expand-md custom-nav text-white fixed-top\">\n            <a class=\" text-white navbar-brand\" href=\"/\"><img style={{height:35}} src=\"https://www.zaiodev.com/static/media/zaiowhite.76601178.png\"/></a>\n            <ul class=\"nav navbar-nav ml-auto\">\n                <Dropdown className=\"float-right\">\n                    <Dropdown.Toggle variant=\"\" id=\"dropdown-basic\">\n                        <Avatar src={props.imageUrl} color={Avatar.getRandomColor('sitebase', ['green'])} name={props.email} size={30} round=\"35px\" />\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item onClick={() => { reactLocalStorage.clear(); window.location.reload() }} href=\"\">Logout</Dropdown.Item>\n\n                    </Dropdown.Menu>\n                </Dropdown>\n            </ul>\n\n\n            {/* </Navbar.Collapse> */}\n\n\n\n        </Navbar>\n\n    );\n}\nexport default NavbarUi;","import axios from 'axios';\nvar baseUrl = \"https://devjam-server.herokuapp.com/api\";\n// var baseUrl = \"http://localhost:4000/api\";\nasync function signupWithEmailPassword(data) {\n    return new Promise((resolve, reject) => {\n        axios.post(`${baseUrl}/userLogin`, { data }).then((data) => {\n            resolve(data.data);\n        }).catch((err) => {\n            reject(err);\n        })\n    })\n}\n\nasync function createAccount(data) {\n    return new Promise((resolve, reject) => {\n        axios.post(`${baseUrl}/userSignup`, { data }).then((data) => {\n            resolve(data.data);\n        }).catch((err) => {\n            alert(JSON.stringify(err))\n            reject(err);\n        })\n    })\n\n}\n\nasync function getContent() {\n    return new Promise((resolve, reject) => {\n        axios.get(`${baseUrl}/content/cryptx}`).then((content) => {\n            resolve(content.data);\n        }).catch((err) => {\n            reject(err);\n        })\n    })\n\n}\nasync function getTopic(_id) {\n\n    return new Promise((resolve, reject) => {\n        axios.get(`${baseUrl}/topic/${_id}`).then((topicDetail) => {\n            resolve(topicDetail.data);\n        }).catch((err) => {\n            reject(err);\n        })\n    })\n}\n\nasync function submitFile(data) {\n    return new Promise((resolve, reject) => {\n        axios.post(`${baseUrl}/submitFile`, { data }).then((data) => {\n            resolve(data.data);\n        }).catch((err) => {\n\n            reject(err);\n        })\n    })\n\n\n\n}\nasync function getSubmission(email, id) {\n    return new Promise((resolve, reject) => {\n        axios.post(`${baseUrl}/getFile`, { email, id }).then((data) => {\n            resolve(data.data);\n        }).catch((err) => {\n\n            reject(err);\n        })\n    })\n\n}\n\nasync function githubAuth(code, type) {\n    return new Promise((resolve, reject) => {\n        axios.post(`${baseUrl}/github-auth`, { code, type }).then((data) => {\n            resolve(data.data);\n        }).catch((err) => {\n\n            reject(err);\n        })\n    })\n}\n\n\n\n\nexport {\n    signupWithEmailPassword,\n    getContent,\n    getTopic,\n    createAccount,\n    submitFile,\n    getSubmission,\n    githubAuth\n\n\n}","import React from 'react';\nimport { faVideoSlash, faEdit, faSearch, faVideo, faPlayCircle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { getContent } from '../data/data'\nclass Content extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            searchRes: [],\n            colors: [\n                '7f87b2',\n                '83b2d0',\n                '95dab6',\n                'dc8580'\n            ]\n        }\n        this.search = this.search.bind(this);\n    }\n\n    submit(e) {\n        e.preventDefault();\n    }\n    search(event) {\n        var query = event.target.value;\n        var searchRes = this.state.data.filter((topic) => {\n            return topic.title.toLowerCase().includes(query.trim().toLowerCase());\n        })\n        this.setState({ searchRes })\n\n    }\n\n    componentDidMount() {\n        getContent().then((data) => {\n            this.setState({ data, searchRes: data })\n\n        })\n\n    }\n    calculateVideos(subTopics) {\n        var count = 0;\n        for (var i = 0; i < subTopics.length; i++) {\n            if (subTopics[i].type === \"video\") count += 1;\n        }\n        return count;\n    }\n\n    render() {\n        return (\n            <div className=\"body\">\n                <div className=\" container\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3\"></div>\n                        <div class=\"col-md-6\">\n                            <div class=\"text-center s009\">\n                                <form onSubmit={this.submit} class=\"text-center\">\n                                    <div class=\"inner-form\">\n                                        <div class=\"basic-search\">\n                                            <div class=\"input-field\">\n                                                <input onChange={this.search} id=\"search\" type=\"text\" placeholder=\"Search Topics..\" />\n                                                <div class=\"icon-wrap\">\n                                                    <svg class=\"svg-inline--fa fa-search fa-w-16\" fill=\"#ccc\" aria-hidden=\"true\" data-prefix=\"fas\" data-icon=\"search\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                                        <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\n                                                    </svg>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </form>\n                            </div>\n\n                        </div>\n                        <div class=\"col-md-3\"></div>\n\n\n\n                    </div>\n                    <div className=\"content-wrapper mt-4\">\n                        {this.state.searchRes.map((value, index) => {\n\n                            var color = Math.floor(Math.random() * 4);\n                            return <div class=\"video-card\">\n                                <a href=\"#\" class=\"video-card__card-link\"></a>\n\n                                <img class=\"video-card__image\" src={value.subTopics[0].thumbNail} alt=\"Card image\" /> alt=\"Card image\" />\n                            <div class=\"video-card__text-wrapper\">\n                                    {/* <div className=\"text-center row\"> */}\n\n\n                                    <h2 class=\"video-card__title text-center\">{value.title}</h2>\n                                    <div class=\"video-card__post-date\">\n                                        <div className=\"col-sm-4\">\n                                            <p className=\"m-0\">{this.calculateVideos(value.subTopics)}</p>\n                                            <p className=\"text-muted\">Videos</p>\n\n                                        </div>\n                                        {value.subTopics.length ? <a href={`/topic/${value._id}/subtopic/${value.subTopics[0].subTopicId}`} className=\"btn text-center  text-white btn-lg\" ><FontAwesomeIcon className=\"border-white\" style={{ fontSize: \"45\" }} icon={faPlayCircle} /></a> :\n                                            <a href={`#`} className=\"btn text-center  text-white btn-lg\" ><FontAwesomeIcon className=\"border-white\" style={{ fontSize: \"35\" }} icon={faVideoSlash} /></a>\n                                        }\n\n                                        <div className=\"col-sm-4 items\">\n                                            <p className=\"m-0\">{value.subTopics.length}</p>\n                                            <p className=\"text-muted\">Items</p>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            // </div>\n                        })}\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n}\nexport default Content;","import { createBrowserHistory as history} from 'history';\n\nexport default history();","import React from 'react';\nimport ReactPlayer from 'react-player'\nimport { faArrowRight,faArrowLeft,faEllipsisH, faPlus, faFileArchive, faTimesCircle, faStopwatch20, faStopwatch } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Dropdown } from 'react-bootstrap'\nfunction VideoPlayer(props) {\n    return (\n        <div  className=\"player \"> \n            <ReactPlayer\n                \n                showNext={true}\n                width={\"100%\"}\n                height={\"90%\"}\n                marginRight={\"40px\"}\n                playbackRate={props.playbackRate}\n                controls={true}\n                config={{\n                    file: {\n                        attributes: {\n                            onContextMenu: e => e.preventDefault(),\n                            controlsList: 'nodownload'\n                        }\n                    }\n                }}\n                url={props.videoUrl}\n            />\n\n            <div className=\"row icons\">\n                <div className=\" col-md-12 text-center\">\n               {props.prev==\"#\"?<div></div>:<a href={props.prev}><FontAwesomeIcon style={{fontSize:\"25\",marginTop:\"3px\"}} className=\" mr-5 border-white text-white\"  icon={faArrowLeft} /></a>} \n                <select onChange={(e)=>{props.changePlayback(e.target.value)}} className=\"mr-5 border-white text-dark mb-2\">\n                    <option>1x</option>\n                    <option>1.25x</option>\n                    <option>1.5x</option>\n                    <option>1.75x</option>\n                    <option>2x</option>\n                    </select>\n                    <select  className=\"mr-5 border-white text-dark mb-2\">\n                    <option>HD</option>\n                    <option>SD</option>\n                    </select>\n                \n                    {props.next==\"#\"?<div></div>:<a href={props.next}><FontAwesomeIcon style={{fontSize:\"25\",marginTop:\"3px\"}} className=\" mr-5 border-white text-white\"  icon={faArrowRight} /></a>} \n                    \n                   \n                </div>\n            </div>\n        </div>\n    );\n}\nexport default VideoPlayer;","import React from 'react';\nimport { faPlayCircle, faEllipsisH, faPlus, faFileArchive, faArchive } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nfunction FileUpload(props) {\n    // alert(props.isSubmitted);\n    var widget = window.cloudinary.createUploadWidget({\n        cloudName: \"sarthaksadh\", uploadPreset: \"orbnpafv\", multiple: false,\n        resourceType: \"raw\"\n    }, (error, result) => {\n        if (error) {\n            return;\n\n        }\n        if (!error && result && result.event === \"success\") {\n            props.changeSubmission(\"fileUrl\", result.info.secure_url)\n        }\n    })\n    return (\n\n        <div style={{ marginLeft: \"25%\" }} className=\"text-center col-md-6 mt-5\">\n            <div class=\"card h-100 shadow\">\n                <div class=\"bg-dark text-white card-header\">\n                    Submit Task\n                                </div>\n                <div class=\"text-center card-body\">\n                    <h5 onClick={() => { if (!props.isSubmitted) widget.open() }} class=\"text-center card-title\"> <FontAwesomeIcon className=\"text-dark\" icon={faFileArchive} /> {props.isSubmitted ? \"File Uploaded\" : \"Add or create\"}</h5>\n                    {props.fileUrl == \"\" ? <div></div> : <a href={props.fileUrl}>file uploaded</a>}\n                </div>\n                <div className=\"card-footer text-center\">\n                    <div class=\"p-1 form-group\">\n                        <input disabled={props.isSubmitted} onChange={(e) => { props.changeSubmission(\"privateComment\", e.target.value) }} placeholder=\"comment..\" type=\"text\" class=\"form-control\" id=\"exampleInputPassword1\" />\n                    </div>\n                    <button onClick={() => { if (!props.isSubmitted) props.uploadFile() }} class=\"text-center  btn btn-outline-dark\">{props.isSubmitted ? \"Completed\" : \"Mark as completed\"}</button>\n                </div>\n            </div>\n        </div>\n\n\n\n\n    );\n}\nexport default FileUpload;","import React from 'react';\nimport { faPlayCircle, faEllipsisH, faPlus, faFileArchive, faEllipsisV } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport ReactList from 'react-list';\nimport { DiscussionEmbed } from 'disqus-react';\nimport Truncate from 'react-truncate';\nimport { getTopic, getSubmission, submitFile } from '../data/data'\nimport VideoPlayer from '../components/videoPlayer';\nimport FileUpload from '../components/fileUpload';\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport { NotificationManager } from 'react-notifications';\nconst ReactMarkdown = require('react-markdown')\nclass Topic extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                title: \"\",\n                subTopics: []\n            },\n            currentSubTopic: {\n                type: \"video\"\n            },\n            isFullTopic: true,\n            isFullVideoTitle: true,\n            prev: \"/#\",\n            next: \"/#\",\n            playbackRate: 1,\n            privateComment: \"\",\n            fileUrl: \"\",\n            isSubmitted: true\n        };\n        this.renderItem = this.renderItem.bind(this);\n        this.changePlayback = this.changePlayback.bind(this);\n        \n        \n\n        this.changeSubmission = this.changeSubmission.bind(this);\n        this.uploadFile = this.uploadFile.bind(this);\n    }\n\n    calculateCurrentSubtopic(data) {\n        var currentSubTopic = data.subTopics.filter((subTopic) => {\n            return subTopic.subTopicId === this.props.match.params.videoId\n        });\n        var prev = \"#\";\n        var next = \"#\";\n        for(var i=0;i<data.subTopics.length;i++){\n            if(data.subTopics[i].subTopicId===this.props.match.params.videoId){\n                // alert(\"lol\")\n                if(i!=0){\n                    prev = `/topic/${data._id}/subtopic/${data.subTopics[i-1].subTopicId}`\n\n                }\n                if(i!=(data.subTopics.length-1)){\n                    next = `/topic/${data._id}/subtopic/${data.subTopics[i+1].subTopicId}`\n                    // alert(\"hah\")\n                }\n            }\n        }\n    \n        this.setState({prev,next});\n        if (currentSubTopic[0].type != \"video\") {\n            var email = reactLocalStorage.getObject(\"user\").email\n            getSubmission(email, currentSubTopic[0].subTopicId).then((docs) => {\n\n                if (docs.length > 0) {\n                    this.setState({ isSubmitted: true, currentSubTopic: currentSubTopic[0] })\n                }\n                else {\n                    this.setState({ isSubmitted: false, currentSubTopic: currentSubTopic[0] })\n                }\n            }).catch((err) => {\n\n            }).finally(() => {\n                this.props.toggleLoading();\n            })\n        } else {\n            this.setState({ currentSubTopic: currentSubTopic[0] })\n            this.props.toggleLoading();\n\n        }\n\n\n    }\n\n    changeSubmission(type, value) {\n        if (type == \"fileUrl\") {\n            this.setState({ fileUrl: value });\n\n        }\n        if (type == \"privateComment\") {\n            this.setState({ privateComment: value });\n        }\n\n    }\n\n    uploadFile() {\n        if (this.state.fileUrl === \"\") {\n            NotificationManager.error(\"No file Selected\");\n            return;\n        }\n        this.props.toggleLoading(\"Uploading..\")\n        var data = {\n            email: reactLocalStorage.getObject(\"user\").email,\n            subTopicId: this.state.currentSubTopic.subTopicId,\n            fileUrl: this.state.fileUrl,\n            comment: this.state.privateComment,\n        };\n        submitFile(data).then((doc) => {\n            this.setState({ isSubmitted: true });\n        }).finally(() => {\n            this.props.toggleLoading(\"Uploading..\")\n        })\n\n    }\n\n    changePlayback(val){\n        var value = parseFloat(val);\n        this.setState({playbackRate:value})\n    }\n\n   \n\n\n    renderItem(index, key) {\n\n        var icon = this.state.data.subTopics[index].type === \"video\" ? faPlayCircle : faFileArchive;\n        var border = this.state.data.subTopics[index].subTopicId === this.props.match.params.videoId ? \"border-dark card rounded  mb-3\" : \"card rounded  mb-3\";\n        return <div className={border}>\n\n            <div className=\"row shadow rounded\">\n                <div className=\"col-md-6 bg-dark\">\n                    <img className=\"p-2 w-100\" src=\"https://images.squarespace-cdn.com/content/v1/5a5906400abd0406785519dd/1552662149940-G6MMFW3JC2J61UBPROJ5/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/baelen.jpg?format=1500w\" />\n\n                </div>\n                <div className=\"text-center col-md-6 bg-light\">\n                    <div className=\"text-truncate  mb-3\">\n                        <h5>{this.state.data.subTopics[index].title}</h5>\n                    </div>\n\n                    <a href={`/topic/${this.state.data._id}/subtopic/${this.state.data.subTopics[index].subTopicId}`}><FontAwesomeIcon className=\"border-white \" style={{ fontSize: \"45\",color:\"#4633af\" }} icon={icon} /></a>\n                    <div className=\"mt-2 row\">\n                        {this.state.data.subTopics[index].type === \"video\" ? <div></div> : <div className=\"text-muted col-md-12 text-center\">{this.state.data.subTopics[index].points} points</div>}\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    }\n\n\n\n    componentDidMount() {\n        this.props.toggleLoading();\n        getTopic(this.props.match.params.topicId).then((data) => {\n            this.setState({ data })\n            this.calculateCurrentSubtopic(data)\n\n        }).catch((err) => {\n            this.props.toggleLoading();\n        }).finally(() => {\n\n        })\n    }\n\n\n\n\n    render() {\n        const disqusShortname = \"chrome-chat-extension\" //found in your Disqus.com dashboard\n        const disqusConfig = {\n            url: window.location.href, //this.props.pageUrl\n            identifier: this.props.match.params.videoId, //this.props.uniqueId\n            title: this.state.currentSubTopic.title //this.props.title\n        }\n        var data = this.state.currentSubTopic.type == \"video\" ? this.state.currentSubTopic.desc : this.state.currentSubTopic.instruction;\n        return (\n            <div  >\n                <div className=\"container mb-0\">\n                    <div className=\"row\">\n                        <div className=\"title text-dark col-md-12\">\n                            <h3>{this.state.data.title}</h3>\n\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"mb-2 mt-1 text-muted col-md-12\">\n                            {this.state.isFullTopic ? this.state.data.desc : \"\"}\n                            <FontAwesomeIcon onClick={() => {\n                                var isFullTopic = !this.state.isFullTopic;\n                                this.setState({ isFullTopic })\n                            }} className=\"border-white text-dark\" icon={faEllipsisH} />\n\n\n                        </div>\n                    </div>\n                    <hr className=\"hr\" />\n                </div>\n\n\n\n\n\n                <div className=\"row\">\n\n                    <div className=\"col-md-8\">\n\n                        <div className=\"row\">\n                            {\n                                this.state.currentSubTopic.type === \"video\"\n                                    ? <VideoPlayer\n                                        prev={this.state.prev}\n                                        next={this.state.next}\n                                        videoUrl={this.state.currentSubTopic.videoLink}\n                                        playbackRate={this.state.playbackRate}\n                                        changePlayback ={this.changePlayback}\n                                    />\n                                    : <FileUpload\n                                        isSubmitted={this.state.isSubmitted}\n                                        changeSubmission={this.changeSubmission}\n                                        fileUrl={this.state.fileUrl}\n                                        uploadFile={this.uploadFile}\n                                    />}\n                        </div>\n                        <div class=\"caption\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <h5 className=\"mt-5\"><b>{this.state.currentSubTopic.title}</b></h5>\n                                    <hr className=\"hr\" />\n                                </div>\n                            </div>\n\n                            <div className=\"row \">\n\n                                <div className=\"text-muted col-md-12\">\n                                    {this.state.isFullVideoTitle ? <ReactMarkdown escapeHtml={false} source={data} /> : \"\"}\n                                    <FontAwesomeIcon onClick={() => {\n                                        var isFullVideoTitle = !this.state.isFullVideoTitle;\n                                        this.setState({ isFullVideoTitle })\n                                    }} className=\"border-white text-dark\" icon={faEllipsisH} />\n\n\n                                </div>\n                            </div>\n                        </div>\n\n\n\n                        <section class=\"bg-style\">\n                            <div className=\"row\">\n\n                                <div className=\"col-md-12\">\n                                    <DiscussionEmbed\n                                        shortname={disqusShortname}\n                                        config={disqusConfig}\n                                        \n                                    />\n                                </div>\n                            </div>\n                        </section>\n\n                    </div>\n\n                    <div className=\"col-md-4\">\n                        <div className=\"container left-side\">\n                            <h5 className=\"text-truncate\">{this.state.data.title}</h5>\n                            <hr  />\n                            <div className=\" border-dark\" style={{ overflow: 'auto', maxHeight: 400 }}>\n\n                                <ReactList\n\n                                    itemRenderer={this.renderItem}\n                                    length={this.state.data.subTopics.length}\n                                    type='uniform'\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n\n\n}\nexport default Topic;","import React from 'react';\n// import { login } from \"../data/data\"\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport GoogleLogin from 'react-google-login';\nimport { faPlayCircle, faEllipsisH, faPlus, faLongArrowAltRight, faGhost } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { signupWithEmailPassword, githubAuth } from '../data/data';\nvar url = require('url');\nvar validator = require(\"email-validator\");\nclass Login extends React.Component {\n    state = {\n        userName: \"\",\n        password: \"\",\n    }\n\n    constructor(props) {\n        super(props)\n        this.handleUserNameChange = this.handleUserNameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n\n        this.googleLogin = this.googleLogin.bind(this);\n\n    }\n\n    handleUserNameChange(event) {\n        this.setState({ userName: event.target.value })\n\n    }\n    handlePasswordChange(event) {\n        this.setState({ password: event.target.value })\n\n    }\n    toggleLoginPage() {\n        var loginPage = this.state.loginPage;\n        loginPage = !loginPage;\n        this.setState({ loginPage })\n    }\n  \n\n    handleFormSubmit(event) {\n        event.preventDefault();\n        var email = this.state.userName.trim();\n        if(!validator.validate(email)){\n            NotificationManager.error(\"Invalid Email\");\n            return;\n\n        }\n        if (this.state.password.trim().length < 6) {\n            NotificationManager.error(\"Password too short!\");\n            return;\n\n        }\n        this.props.toggleLoading();\n        var data = {\n            email: this.state.userName,\n            password: this.state.password,\n            isSocialLogin: false\n        }\n        signupWithEmailPassword(data).then((res) => {\n            if (res.success) {\n                NotificationManager.success(\"Success..!\");\n                reactLocalStorage.setObject('user', { email: this.state.userName, imageUrl: \"\", isSocialLogin: false, isLoggedin: true });\n                window.location.reload();\n\n            }\n            else {\n                NotificationManager.error(res.err);\n            }\n        }).catch((err) => {\n            NotificationManager.error(\"Server Error!\");\n        }).finally(() => {\n            this.props.toggleLoading();\n\n        })\n\n\n    }\n    googleLogin(res, error = false) {\n        if (error) {\n            this.props.toggleLoading();\n            NotificationManager.error(\"Error login in!\")\n\n        } else {\n            var data = {\n                email: res.profileObj.email,\n                name: res.profileObj.name,\n                imageUrl: res.profileObj.imageUrl,\n                isSocialLogin: true\n            }\n            signupWithEmailPassword(data).then((res2) => {\n                if (res2.success) {\n                    NotificationManager.success(\"Success..!\");\n                    reactLocalStorage.setObject('user', { email: res.profileObj.email, imageUrl: res.profileObj.imageUrl, isSocialLogin: true, isLoggedin: true });\n                    window.location.reload();\n\n                }\n                else {\n                    NotificationManager.error(res2.err);\n                }\n            }).catch((err) => {\n                NotificationManager.error(\"Server Error!\");\n            }).finally(() => {\n                this.props.toggleLoading();\n\n            })\n\n\n        }\n\n\n    }\n    componentDidMount() {\n        let url_parts = url.parse(window.location.href, true),\n            responseData = url_parts.query;\n        if (responseData.code != undefined && responseData.state != undefined) {\n            this.props.toggleLoading(\"Verifying user from github..\");\n            githubAuth(responseData.code, responseData.state).then((res) => {\n\n                if (res.success) {\n                    reactLocalStorage.setObject('user', { email: res.data.email, imageUrl: res.data.imageUrl, isSocialLogin: true, isLoggedin: true });\n                    window.location.reload();\n\n                }\n                else {\n                    //   NotificationManager.error(res.err);\n\n                }\n            }).catch((err) => {\n                // NotificationManager.error(\"Server error\");\n            }).finally(() => {\n                this.props.toggleLoading(\"Verifying user from github..\");\n            })\n\n        }\n\n    }\n\n    render() {\n        return (\n\n            <div class=\"container-outer  \">\n                {/* <div class=\"wrap-login100\"> */}\n                <div class=\"inner\">\n                    <div className=\"shadow round p-5  card\">\n                        <div className=\"text-center card-title\"> <h3 className=\"heading\">Cryptx</h3></div>\n\n\n\n\n                        <form onSubmit={this.handleFormSubmit}>\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputEmail1\"></label>\n                                <input onChange={this.handleUserNameChange} value={this.state.userName} type=\"email\" placeholder=\"Email\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n                                <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputPassword1\"></label>\n                                <input onChange={this.handlePasswordChange} value={this.state.password} type=\"password\" placeholder=\"Password\" id=\"exampleInputPassword1\" />\n                            </div>\n\n                        \n\n                            <div className=\"col-sm-12 text-center\">\n                                <button type=\"submit\" class=\"rounded-pill text-center submit\">Login</button>\n                            </div>\n\n\n\n\n                        </form>\n                        <div className=\"row mr-3 mt-2 text-center\">\n                            <div className=\"col-sm-12 \">\n\n                                <GoogleLogin\n                                    clientId=\"826597553367-h6f2fi709f0586pfse1f0pgld1dukqlo.apps.googleusercontent.com\"\n                                    buttonText=\"\"\n                                    render={renderProps => (\n                                        <button type=\"button\" className=\"btn mr-1 text-danger \" onClick={() => { this.props.toggleLoading(\"Waiting for google!\"); renderProps.onClick() }} ><i style={{ fontSize: 25 }} class=\"fab fa-google-plus-g\"></i></button>\n                                    )}\n                                    onSuccess={this.googleLogin}\n                                    onFailure={(data) => { this.googleLogin(data, true) }}\n                                    cookiePolicy={'single_host_origin'}\n                                />,\n                                     <a type=\"\" className=\" text-dark\" href={`https://github.com/login/oauth/authorize?scope=user&client_id=${'Iv1.819423876210273a'}&state=login`}><i style={{ fontSize: 25 }} class=\"fab fa-github\"></i></a>\n\n                            </div>\n\n                        </div>\n                        <div style={{marginLeft:32}} className=\"col-sm-12 \">\n                                <a className=\"text-center mr-1 mt-2 text-dark Already\" href=\"/signup\">Create Account</a>\n                            </div>\n                    </div>\n                </div>\n                {/* </div> */}\n                <NotificationContainer />\n            </div>\n\n        )\n    }\n}\nexport default Login;","import React from 'react';\n\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport GitHubLogin from 'react-github-login';\nimport GoogleLogin from 'react-google-login';\nimport { faPlayCircle, faEllipsisH, faPlus, faLongArrowAltRight, faGhost } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { signupWithEmailPassword, createAccount } from '../data/data';\nvar validator = require(\"email-validator\");\nclass Signup extends React.Component {\n    state = {\n        userName: \"\",\n        password: \"\",\n    }\n\n    constructor(props) {\n        super(props)\n        this.handleUserNameChange = this.handleUserNameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n\n        this.googleLogin = this.googleLogin.bind(this);\n        this.githubLogin = this.githubLogin.bind(this);\n    }\n\n    handleUserNameChange(event) {\n        this.setState({ userName: event.target.value })\n\n    }\n    handlePasswordChange(event) {\n        this.setState({ password: event.target.value })\n\n    }\n    toggleLoginPage() {\n        var loginPage = this.state.loginPage;\n        loginPage = !loginPage;\n        this.setState({ loginPage })\n    }\n\n   \n\n    handleFormSubmit(event) {\n        event.preventDefault();\n        var email = this.state.userName.trim();\n        if(!validator.validate(email)){\n            NotificationManager.error(\"Invalid Email\");\n            return;\n\n        }\n        if (this.state.password.trim().length < 6) {\n            NotificationManager.error(\"Password too short!\");\n            return;\n\n        }\n        this.props.toggleLoading();\n        var data = {\n            email: this.state.userName,\n            password: this.state.password,\n            isSocialLogin: false\n        }\n        createAccount(data).then((res) => {\n            if (res.success) {\n                NotificationManager.success(\"Success..!\");\n                reactLocalStorage.setObject('user', { email: this.state.userName, imageUrl: \"\", isSocialLogin: false, isLoggedin: true });\n                window.location.reload();\n\n            }\n            else {\n                NotificationManager.error(res.err);\n            }\n        }).catch((err) => {\n            NotificationManager.error(\"Server Error!\");\n        }).finally(() => {\n            this.props.toggleLoading();\n\n        })\n\n\n    }\n    googleLogin(res, error = false) {\n        if (error) {\n            this.props.toggleLoading();\n            NotificationManager.error(\"Error login in!\")\n\n        } else {\n            var data = {\n                email: res.profileObj.email,\n                name: res.profileObj.name,\n                imageUrl: res.profileObj.imageUrl,\n                isSocialLogin: true\n            }\n            createAccount(data).then((res2) => {\n                if (res2.success) {\n                    NotificationManager.success(\"Success..!\");\n                    reactLocalStorage.setObject('user', { email: res.profileObj.email, imageUrl: res.profileObj.imageUrl, isSocialLogin: true, isLoggedin: true });\n                    window.location.reload();\n\n                }\n                else {\n                    NotificationManager.error(res2.err);\n                }\n            }).catch((err) => {\n                NotificationManager.error(\"Server Error!\");\n            }).finally(() => {\n                this.props.toggleLoading();\n\n            })\n\n\n        }\n\n\n    }\n    githubLogin(data) {\n\n    }\n\n\n    render() {\n        return (\n\n            <div class=\"container-outer bg-dark\">\n                <div class=\"inner\">\n                    <div className=\"shadow round p-5  card\">\n                        <div className=\"text-center \"> <h3 className=\"heading\">Cryptx</h3></div>\n                        <form onSubmit={this.handleFormSubmit}>\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputEmail1\"></label>\n                                <input onChange={this.handleUserNameChange} value={this.state.userName} type=\"email\" placeholder=\"Email\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n                                <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputPassword1\"></label>\n                                <input onChange={this.handlePasswordChange} value={this.state.password} type=\"password\" placeholder=\"Password\" id=\"exampleInputPassword1\" />\n                            </div>\n\n                            <div className=\"col-sm-12 text-center\">\n                                <button type=\"submit\" class=\"rounded-pill text-center submit\">Signup</button>\n                            </div>\n\n                        </form>\n\n                        <div className=\"row mr-3 mt-2 text-center\">\n                            <div className=\"col-sm-12 \">\n\n                                <GoogleLogin\n                                    clientId=\"826597553367-h6f2fi709f0586pfse1f0pgld1dukqlo.apps.googleusercontent.com\"\n                                    buttonText=\"\"\n                                    render={renderProps => (\n                                        <button type=\"button\" className=\"btn mr-1 text-danger \" onClick={() => { this.props.toggleLoading(\"Waiting for google!\"); renderProps.onClick() }} ><i style={{ fontSize: 25 }} class=\"fab fa-google-plus-g\"></i></button>\n                                    )}\n                                    onSuccess={this.googleLogin}\n                                    onFailure={(data) => { this.googleLogin(data, true) }}\n                                    cookiePolicy={'single_host_origin'}\n                                />,\n                                     <a type=\"\" className=\" text-dark\" href={`https://github.com/login/oauth/authorize?scope=user&client_id=${'Iv1.819423876210273a'}&state=signup`}><i style={{ fontSize: 25 }} class=\"fab fa-github\"></i></a>\n\n                            </div>\n\n                        </div>\n                        <div style={{ marginLeft: 28 }} className=\"col-sm-12\">\n                            <a className=\"text-center mr-1 mt-2 text-dark Already\" href=\"/login\">Already Account?</a>\n                        </div>\n                    </div>\n                </div>\n                {/* </div> */}\n                <NotificationContainer />\n            </div>\n\n        )\n    }\n}\nexport default Signup;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './assets/css/bootstrap.min.css';\nimport './assets/css/main.css';\nimport 'react-notifications/lib/notifications.css';\nimport NavbarUi from './components/navbar';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport Content from './pages/content';\nimport history from \"./components/history\"\nimport Topic from './pages/topic';\nimport Login from './pages/login';\nimport Signup from './pages/signup';\n\nclass App extends React.Component {\n  state = {\n    isLoading: false,\n    loadingText: \"loading...\",\n    isLoggedin: false,\n    loadingCred: true,\n    user:{\n      email:\"\",\n      imageUrl:\"\",\n      isLoggedin:false,\n      isSocialLogin:false\n    }\n  }\n  constructor(props) {\n    super(props)\n    this.toggleLoading = this.toggleLoading.bind(this)\n  }\n  toggleLoading(text = \"loading...\") {\n    var currentState = this.state.isLoading;\n    this.setState({ isLoading: !currentState, loadingText: text });\n  }\n  componentDidMount() {\n    var user = reactLocalStorage.getObject('user',{\n      email:\"\",\n      imageUrl:\"\",\n      isLoggedin:false,\n      isSocialLogin:false\n\n    },true);\n  \n    if(user.isLoggedin){\n      this.setState({isLoggedin:true,user})\n\n    }\n   \n  }\n  render() {\n    return (\n        <Router history={history}>\n          < NotificationContainer />\n          <LoadingOverlay\n            active={this.state.isLoading}\n            spinner\n            text={this.state.loadingText}\n          >\n            {/* <NavbarUi />  */}\n            {this.state.isLoggedin ? <NavbarUi imageUrl ={this.state.user.imageUrl} email ={this.state.user.email}/> : <div></div>}\n            <Switch>\n              <Route exact path=\"/\" render={(props) =>this.state.isLoggedin ? <Content {...props} toggleLoading={this.toggleLoading} />:<Login {...props} toggleLoading={this.toggleLoading} />} />\n              <Route  path=\"/topic/:topicId/subtopic/:videoId\" render={(props) =>this.state.isLoggedin ? <Topic {...props} toggleLoading={this.toggleLoading} />:<Login {...props} toggleLoading={this.toggleLoading} />}  />\n              <Route  path=\"/login\" render={(props) =>this.state.isLoggedin ? <Content {...props} toggleLoading={this.toggleLoading} />:<Login {...props} toggleLoading={this.toggleLoading} />} />\n              <Route  path=\"/signup\" render={(props) =>this.state.isLoggedin ? <Content {...props} toggleLoading={this.toggleLoading} />:<Signup {...props} toggleLoading={this.toggleLoading} />} />\n              <Route  path=\"/content\" render={(props) =>this.state.isLoggedin ? <Content {...props} toggleLoading={this.toggleLoading} />:<Login {...props} toggleLoading={this.toggleLoading} />} />\n            </Switch>\n          </LoadingOverlay>\n        </Router>\n\n    );\n\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}